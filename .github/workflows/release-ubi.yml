name: Release UBI
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'MaxScale version'
        required: true
        type: string
      tags:
        description: 'Tags separated by comma'
        required: true
        type: string
        default: 'mariadb/maxscale:insert_version_here-ubi'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "rhel-ubi8"
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          build-args: |
            MXS_VERSION=${{ github.event.inputs.version }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ github.event.inputs.tags }}
          labels: |
            name=MariaDB MaxScale
            maintainer="docker-maintainers@mariadb.com"
            vendor="MariaDB, plc"
            version=${{ github.event.inputs.version }}
            release=${{ github.event.inputs.version }}
            revision=${{ github.sha }}
            summary="MariaDB MaxScale database proxy"
            description=MariaDB MaxScale is a database proxy that extends the high availability, scalability, and security of MariaDB Server
            source=${{ github.event.repository.html_url }}
            url=${{ github.event.repository.html_url }}

      - name: Preflight image
        run: |
          IFS=',' read -r -a TAGS_ARRAY <<< "${{ github.event.inputs.tags }}"
          for TAG in "${TAGS_ARRAY[@]}"; do
            echo "Running preflight for \"$TAG\""
            PREFLIGHT_IMAGE="$TAG" make preflight-image-submit 
          done
        env:
          MXS_VERSION: "${{ github.event.inputs.version }}"
          REDHAT_API_KEY: "${{ secrets.REDHAT_API_KEY }}"
          REDHAT_PROJECT_ID: "${{ secrets.REDHAT_PROJECT_ID }}"

